/**
  Нормализация блочной модели
 */
*,
*::before,
*::after {
    box-sizing: border-box;
}

/**
       Убираем внутренние отступы слева тегам списков,
       у которых есть атрибут class
      */
:where(ul, ol):where([class]) {
    padding-left: 0;
}

/**
       Убираем внешние отступы body и двум другим тегам,
       у которых есть атрибут class
      */
body,
:where(blockquote, figure):where([class]) {
    margin: 0;
}

/**
       Убираем внешние отступы вертикали нужным тегам,
       у которых есть атрибут class
      */
:where(h1, h2, h3, h4, h5, h6, p, ul, ol, dl):where([class]) {
    margin-block: 0;
}

:where(dd[class]) {
    margin-left: 0;
}

:where(fieldset[class]) {
    margin-left: 0;
    padding: 0;
    border: none;
}

/**
       Убираем стандартный маркер маркированному списку,
       у которого есть атрибут class
      */
:where(ul[class]) {
    list-style: none;
}

/**
       Обнуляем вертикальные внешние отступы параграфа,
       объявляем локальную переменную для внешнего отступа вниз,
       чтобы избежать взаимодействие с более сложным селектором
      */
p {
    --paragraphMarginBottom: 24px;

    margin-block: 0;
}

/**
       Внешний отступ вниз для параграфа без атрибута class,
       который расположен не последним среди своих соседних элементов
      */
p:where(:not([class]):not(:last-child)) {
    margin-bottom: var(--paragraphMarginBottom);
}

/**
       Упрощаем работу с изображениями
      */
img {
    display: block;
    max-width: 100%;
}

/**
       Наследуем свойства шрифт для полей ввода
      */
input,
textarea,
select,
button {
    font: inherit;
}

html {
    /**
         Пригодится в большинстве ситуаций
         (когда, например, нужно будет "прижать" футер к низу сайта)
        */
    height: 100%;
}

/**
       Плавный скролл
      */
html,
:has(:target) {
    scroll-behavior: smooth;
}

body {
    /**
         Пригодится в большинстве ситуаций
         (когда, например, нужно будет "прижать" футер к низу сайта)
        */
    min-height: 100%;
    /**
         Унифицированный интерлиньяж
        */
    line-height: 1.5;
}

/**
       Приводим к единому цвету svg-элементы
      */
svg *[fill] {
    fill: currentColor;
}

svg *[stroke] {
    stroke: currentColor;
}

/**
       Чиним баг задержки смены цвета при взаимодействии с svg-элементами
      */
svg * {
    transition-property: fill, stroke;
}

/**
       Удаляем все анимации и переходы для людей,
       которые предпочитают их не использовать
      */
@media (prefers-reduced-motion: reduce) {
    * {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
        scroll-behavior: auto !important;
    }
}

:root {
    --color-dark: #000000;
    --color-dark-gray: #212121;
    --color-light-gray: #757575;
    --color-light: #ffffff;

    --border-radius: 50px;
    --border: 1px solid var(--color-dark);

    --font-family: "Times New Roman", sans-serif;
    --second-family: "Tahoma", sans-serif;

    --input-width: 100px;
    --input-height: 25px;
    --input-border-radius: 10px 10px 0 0;

    --container-width: 1200px;
    --container-padding-x: 40px;

    --transition-duration: 0.3s;
}

body {
    font-family: var(--font-family);
    font-weight: 400;
    line-height: 1.6;
    color: var(--color-dark);
    background-color: var(--color-light);
}

.popup {
    position: fixed;
    top: 0;
    left: 0;
    visibility: hidden;
    width: 100vw;
    height: 100vh;
    background-color: rgba(0, 0, 0, 0);
    transition: background-color 0.3s, visibility 0.3s;
}

.popup-active {
    visibility: visible;
    background-color: rgba(0, 0, 0, 0.5);
}

.container {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    row-gap: 50px;

    /* max-width: calc(var(--container-width) + var(--container-padding-x) * 2);
    margin-inline: auto;
    padding-inline: var(--container-padding-x); */

    height: 100vh;
}

h1,
h2,
h3,
h4,
h5,
h6 {
    font-family: var(--font-family);
    font-weight: 700;
    line-height: 1;
    color: var(--color-dark);
}

.input {
    padding-left: 10px;

    width: var(--input-width);
    height: var(--input-height);

    font-family: var(--second-family);
    font-size: 16px;

    border: none;
    border-radius: var(--input-border-radius);
    outline: none;
    border-bottom: var(--border);
}

.input:focus-visible {
    box-shadow: rgba(0, 119, 255, 0.555) 0px 0px 0px 3px;
}

.btn {
    max-width: 200px;
    max-height: 100px;

    font-family: var(--second-family);
    font-size: 18px;
}

.workspace {
    display: flex;
    flex-direction: column;
    row-gap: 1.5em;
    padding: 30px 100px;
    max-width: 1100px;
    border-radius: var(--border-radius);
    font-size: 18px;
    box-shadow: rgba(0, 0, 0, 0.2) 0px 12px 28px 0px,
        rgba(0, 0, 0, 0.1) 0px 2px 4px 0px,
        rgba(255, 255, 255, 0.05) 0px 0px 0px 1px inset;
}

.workspace-title {
    font-size: 18px;
}

.workspace-input__name {
    width: 150px;
}

.workspace-text {
}

.workspace-input__date {
    width: 130px;
}

.workspace-input__mail {
    width: 200px;
}

.workspace-input__number {
    width: 80px;
}

.workspace-input__time {
    width: 130px;
}

.workspace-list {
    flex-direction: column;
    list-style: inside;
}

.workspace-item {
}

.workspace-actions {
    display: flex;
    align-items: center;
    justify-content: center;
    column-gap: 20px;
}

.preview-page {
    display: flex;
    position: fixed;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    row-gap: 20px;

    padding: 30px 100px;
    max-width: 1100px;

    visibility: hidden;
    opacity: 0;
    border-radius: var(--border-radius);
    box-shadow: rgba(255, 255, 255, 0.2) 0px 12px 28px 0px,
        rgba(255, 255, 255, 0.1) 0px 2px 4px 0px,
        rgba(0, 0, 0, 0.05) 0px 0px 0px 1px inset;
    background-color: var(--color-light);

    transition: opacity 0.3s, visibility 0.3s;
}

.preview-page-active {
    visibility: visible;
    opacity: 1;
}

.preview-page-actions {
    display: flex;
    align-items: center;
    justify-content: center;
    column-gap: 50px;
}

.close-btn {
    position: absolute;
    top: 20px;
    right: 20px;
    width: 40px;
    aspect-ratio: 1;
    cursor: pointer;
    border: none;
    background-color: #ffffff00;
    transition-duration: var(--transition-duration);
}

.close-btn::after {
    content: "";
    position: absolute;
    top: 0;
    right: 0;
    width: 40px;
    aspect-ratio: 1;
    background-image: url("../assets/close.png");
    background-repeat: no-repeat;
    background-size: contain;
}

.close-btn:hover {
    opacity: 0.5;
}

.preview {
    display: flex;
    flex-direction: column;
    row-gap: 1.5em;
    font-size: 12px;
    max-width: 510px;
    padding: 30px;
    border: var(--border);
}

.preview-title {
    font-size: 12px;
}

.preview-text {
}

.preview-list {
    flex-direction: column;
    list-style: inside;
}

.preview-item {
}
